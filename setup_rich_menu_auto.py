"""
üõ†Ô∏è Rich Menu Auto Setup Tool
‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Rich Menu ‡πÅ‡∏ö‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏Ç‡πâ‡∏≤ LINE Developers Console!
"""

import requests
import json
import os
from src.utils.rich_menu_manager import rich_menu_manager

def setup_rich_menu_automatically():
    """‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Rich Menu ‡πÅ‡∏ö‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥"""
    
    print("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Rich Menu ‡πÅ‡∏ö‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥...")
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö LINE_ACCESS_TOKEN
    line_token = os.environ.get('LINE_ACCESS_TOKEN')
    if not line_token:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö LINE_ACCESS_TOKEN!")
        print("\nüìã ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ LINE_ACCESS_TOKEN:")
        print("1. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà https://developers.line.biz/console/")
        print("2. ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Channel ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì")
        print("3. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà Messaging API tab")
        print("4. ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å Channel Access Token")
        print("5. ‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á: set LINE_ACCESS_TOKEN=YOUR_TOKEN_HERE")
        print("6. ‡∏£‡∏±‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡∏ô‡∏µ‡πâ‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
        return False
    
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á Token
    print("üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö LINE Access Token...")
    headers = {
        'Authorization': f'Bearer {line_token}',
        'Content-Type': 'application/json'
    }
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö API
    test_url = "https://api.line.me/v2/bot/info"
    try:
        response = requests.get(test_url, headers=headers)
        if response.status_code != 200:
            print(f"‚ùå Token ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á! Status: {response.status_code}")
            print(f"Response: {response.text}")
            return False
        
        bot_info = response.json()
        print(f"‚úÖ Token ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á! Bot: {bot_info.get('displayName', 'Unknown')}")
        
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö Token: {e}")
        return False
    
    # ‡∏•‡∏ö Rich Menu ‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    print("\nüóëÔ∏è ‡∏•‡∏ö Rich Menu ‡πÄ‡∏Å‡πà‡∏≤...")
    try:
        list_url = "https://api.line.me/v2/bot/richmenu/list"
        response = requests.get(list_url, headers=headers)
        
        if response.status_code == 200:
            rich_menus = response.json().get('richmenus', [])
            for menu in rich_menus:
                menu_id = menu['richMenuId']
                delete_url = f"https://api.line.me/v2/bot/richmenu/{menu_id}"
                requests.delete(delete_url, headers=headers)
                print(f"  ‚úÖ ‡∏•‡∏ö Rich Menu: {menu_id}")
        
    except Exception as e:
        print(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏ö Rich Menu ‡πÄ‡∏Å‡πà‡∏≤: {e}")
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á Rich Menu ‡πÉ‡∏´‡∏°‡πà
    print("\nüé® ‡∏™‡∏£‡πâ‡∏≤‡∏á Rich Menu ‡πÉ‡∏´‡∏°‡πà...")
    
    try:
        # ‡πÉ‡∏ä‡πâ Rich Menu Manager
        success = rich_menu_manager.setup_rich_menus()
        
        if success:
            print("‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Rich Menu ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
            print("\nüéâ Rich Menu ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß!")
            print("üì± ‡∏•‡∏≠‡∏á‡πÄ‡∏õ‡∏¥‡∏î LINE Bot ‡πÅ‡∏•‡∏∞‡∏î‡∏π Rich Menu ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á")
            return True
        else:
            print("‚ùå ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Rich Menu ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß")
            return False
            
    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
        return False

def show_manual_instructions():
    """‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏ö‡∏ö‡πÅ‡∏°‡∏ô‡∏ô‡∏ß‡∏•"""
    
    print("\n" + "="*60)
    print("üìã ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Rich Menu ‡πÅ‡∏ö‡∏ö‡πÅ‡∏°‡∏ô‡∏ô‡∏ß‡∏•")
    print("="*60)
    
    print("\n1Ô∏è‚É£ ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏ó‡∏µ‡πà LINE Developers Console:")
    print("   https://developers.line.biz/console/")
    
    print("\n2Ô∏è‚É£ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Channel ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì")
    
    print("\n3Ô∏è‚É£ ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÅ‡∏ó‡πá‡∏ö 'Messaging API'")
    
    print("\n4Ô∏è‚É£ ‡∏´‡∏≤ Rich Menu section (‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏•‡∏á)")
    
    print("\n5Ô∏è‚É£ ‡∏Ñ‡∏•‡∏¥‡∏Å 'Create' ‡∏´‡∏£‡∏∑‡∏≠ '‡πÄ‡∏û‡∏¥‡πà‡∏° Rich Menu'")
    
    print("\n6Ô∏è‚É£ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û:")
    print("   - ‡πÑ‡∏ü‡∏•‡πå: rich_menu_images/main_rich_menu.png")
    print("   - ‡∏Ç‡∏ô‡∏≤‡∏î: 2500 x 1686 pixels")
    
    print("\n7Ô∏è‚É£ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ 6 ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà (Areas):")
    areas = [
        ("üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤", "‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"),
        ("üìÇ ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà", "‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà"),
        ("üèÜ ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ", "‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ"),
        ("üéØ ‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô", "‡πÇ‡∏õ‡∏£‡πÇ‡∏°‡∏ä‡∏±‡πà‡∏ô"),
        ("üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥", "‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥"),
        ("‚ùì ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠", "‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠")
    ]
    
    for i, (label, action) in enumerate(areas, 1):
        print(f"   Area {i}: {label}")
        print(f"   Action: Send Text Message = '{action}'")
    
    print("\n8Ô∏è‚É£ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
    
    print("\n" + "="*60)

if __name__ == "__main__":
    print("üéØ Rich Menu Auto Setup Tool")
    print("=" * 40)
    
    # ‡∏•‡∏≠‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏ö‡∏ö‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏Å‡πà‡∏≠‡∏ô
    success = setup_rich_menu_automatically()
    
    if not success:
        print("\n‚ö†Ô∏è ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
        show_manual_instructions()
    
    print("\nüîß ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Rich Menu!")